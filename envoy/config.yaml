admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:


  - name: api
    address:
      socket_address: { address: 0.0.0.0, port_value: 8000 }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          # access_log:
          #   name: envoy.file_access_log
          #   config:
          #     path: /home/ee/access.log
          #     format: >
          #       [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
          #       %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION%
          #       %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%"
          #       "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%" "%UPSTREAM_CLUSTER%"\n
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: api
              domains: ["*"]
              routes:

              - match: { prefix: "/health" }
                direct_response:
                  status: 200

              # core data, new scheme
              - match: { prefix: "/core-data/v1/" }
                route: { cluster: rda, prefix_rewrite: "/" }

              # rda, new scheme
              - match: { prefix: "/rda/v1/" }
                route: { cluster: rda, prefix_rewrite: "/" }

              # guideline, new scheme
              - match: { prefix: "/guideline" }
                route: { cluster: guideline }

              # tenant, new scheme
              - match: { prefix: "/tenant" }
                route: { cluster: guideline }

              # rda, old scheme
              - match: { prefix: "/rda.data" }
                route: { cluster: rda }

              # rda, old scheme
              - match: { prefix: "/rda.configuration" }
                route: { cluster: rda }

              # old scheme, catch all
              - match: { prefix: "/" }
                route: { cluster: api }

          http_filters:
          - name: envoy.router



  clusters:


  - name: api
    connect_timeout: 0.25s
    type: STATIC
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: api
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 1234
    http2_protocol_options:
      hpack_table_size: 4096


  - name: rda
    connect_timeout: 0.25s
    type: STATIC
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: rda
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 7500
    http2_protocol_options:
      hpack_table_size: 4096


  - name: guideline
    connect_timeout: 1s
    type: STATIC
    lb_policy: ROUND_ROBIN
    tls_context: {}
    load_assignment:
      cluster_name: guideline
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 34.254.204.18
                port_value: 443

